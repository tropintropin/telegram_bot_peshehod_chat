import asyncio

from aiogram import Bot, Dispatcher

from config_data.config import Config, load_config


async def main() -> None:
    config: Config = load_config()

    bot: Bot = Bot(token=config.tg_bot.token)
    dp: Dispatcher = Dispatcher()

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())


# –†–∞–±–æ—Ç–∞—é—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –±–æ—Ç–∞:

# env: Env = Env()
# env.read_env('.env')

# bot: Bot = Bot(token=env('BOT_TOKEN'), parse_mode='HTML')  # NB! Change token for the prod bot!
# dp: Dispatcher = Dispatcher()


# @dp.message(Command(commands=['start']))
# async def process_start_command(message: Message):
#     # TODO: –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
#     await message.answer(f'{greeting}')
#     sleep(2)
#     await message.answer(f'{instruction}')
#     sleep(2)
#     await message.answer('<pre><code>–ù–∞—à –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª ü§ó</code></pre>')



# @dp.message()       # for all other messages
# async def send_echo(message: Message):
#     await message.reply(text='''
# –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /help
# –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ''')


# if __name__ == '__main__':
#     dp.run_polling(bot)

